name: Tests

on:
    pull_request:
        branches:
            - master

    workflow_dispatch:
        inputs:
            cache:
                description: 'Delete cache'
                required: false
                default: 'true'

    repository_dispatch:
        types: [automation]

jobs:
    build:
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'repository_dispatch' || github.event_name == 'workflow_dispatch'
        runs-on: [self-hosted, node]

        steps:
            - run: echo "::set-output name=name::background_${{ github.event.number }}_$(date +"%FT%T").zip"
              id: zip

            - name: Checkout monorepo
              uses: actions/checkout@v2

            - name: Dependency UI cache
              if: ${{ github.event.inputs.cache != 'true' }}
              uses: actions/cache@v2
              id: cache-ui
              with:
                  key: ci-v1-${{ runner.os }}-${{ hashFiles('packages/ui/package.json') }}
                  path: 'packages/ui/node_modules'

            - name: Dependency provider cache
              uses: actions/cache@v2
              id: cache-provider
              with:
                  key: ci-v1-${{ runner.os }}-${{ hashFiles('packages/provider/package.json') }}
                  path: 'packages/provider/node_modules'

            - name: Dependency background cache
              uses: actions/cache@v2
              id: cache-background
              with:
                  key: ci-v1-${{ runner.os }}-${{ hashFiles('packages/background/package.json') }}
                  path: 'packages/background/node_modules'

            - name: Install UI dependencies
              if: ${{ (steps.cache-ui.outputs.cache-hit != 'true') || (github.event.inputs.cache == 'true') }}
              run: cd packages/ui/ && yarn install --prefer-offline --frozen-lockfile --cache-folder .ui-cache

            - name: Install background dependencies
              if: ${{ (steps.cache-background.outputs.cache-hit != 'true') || (github.event.inputs.cache == 'true') }}
              run: cd packages/background/ && yarn install --prefer-offline --frozen-lockfile --cache-folder .background-cache
              env:
                  GITHUB_TOKEN: ${{ secrets.PAT }}

            - name: Install provider dependencies
              if: ${{ (steps.cache-provider.outputs.cache-hit != 'true') || (github.event.inputs.cache == 'true') }}
              run: cd packages/provider/ && yarn install --prefer-offline --frozen-lockfile --cache-folder .provider-cache

            - name: Build extension
              run: yarn build-prod
              env:
                  CI: false

            - name: Zip build
              run: zip -r -D ${{ steps.zip.outputs.name }} dist/

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_RELEASE_BUCKET }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_RELEASE_BUCKET }}
                  aws-region: us-east-2

            - name: Upload zip to S3
              run: aws s3 cp ${{ steps.zip.outputs.name }} s3://releases.blockwallet.io/tmp/

            - name: Slack notification - CI status
              uses: 8398a7/action-slack@v3
              with:
                  status: ${{ job.status }}
                  fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
              if: always()

            - name: Slack notification - CI status
              if: success()
              uses: 8398a7/action-slack@v3
              with:
                  status: custom
                  fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
                  custom_payload: |
                      {
                        "attachments": [
                          {
                            "color": "#0d118c",
                            "pretext": "<http://releases.blockwallet.io/tmp/${{ steps.zip.outputs.name }}|Download> temp PR build",
                            "author_name": "Extension",
                            "author_link": "https://github.com/block-wallet/extension",
                            "title": "${{ steps.pr.outputs.title }} #${{ github.event.number }}",
                            "title_link": "https://github.com/block-wallet/extension/pull/${{ github.event.number }}",
                            "fields": [
                              {
                                  "title": "Branch",
                                  "value": "${{ github.head_ref }}",
                                  "short": true
                              },
                              {
                                  "title": "Commit",
                                  "value": "<https://github.com/block-wallet/extension/commit/${{github.event.pull_request.head.sha}}|${{github.event.pull_request.head.sha}}>",
                                  "short": true
                              }
                            ]
                          }
                        ]
                      }
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_RELEASES }}

    test:
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'repository_dispatch' || github.event_name == 'workflow_dispatch'
        runs-on: self-hosted

        steps:
            - run: echo "::set-output name=branch::$(git ls-remote https://${{ secrets.USER_PAT }}:${{ secrets.PAT }}@github.com/block-wallet/extension.git ${{ github.head_ref }})"
              id: monorepo-branch

            - run: echo "::set-output name=branch::$(git ls-remote https://${{ secrets.USER_PAT }}:${{ secrets.PAT }}@github.com/block-wallet/extension-provider.git ${{ github.head_ref }})"
              id: provider-branch

            - run: echo "::set-output name=branch::$(git ls-remote https://${{ secrets.USER_PAT }}:${{ secrets.PAT }}@github.com/block-wallet/extension-ui.git ${{ github.head_ref }})"
              id: ui-branch

            - name: Checkout
              uses: actions/checkout@v2

            - name: Dependency UI cache
              if: ${{ github.event.inputs.cache != 'true' }}
              uses: actions/cache@v2
              id: cache-ui
              with:
                  key: ci-v1-${{ runner.os }}-${{ hashFiles('packages/ui/package.json') }}
                  path: 'packages/ui/node_modules'

            - name: Dependency provider cache
              uses: actions/cache@v2
              id: cache-provider
              with:
                  key: ci-v1-${{ runner.os }}-${{ hashFiles('packages/provider/package.json') }}
                  path: 'packages/provider/node_modules'

            - name: Dependency background cache
              uses: actions/cache@v2
              id: cache-background
              with:
                  key: ci-v1-${{ runner.os }}-${{ hashFiles('packages/background/package.json') }}
                  path: 'packages/background/node_modules'

            - name: Install UI dependencies
              if: ${{ (steps.cache-ui.outputs.cache-hit != 'true') || (github.event.inputs.cache == 'true') }}
              run: cd packages/ui/ && yarn install --prefer-offline --frozen-lockfile --cache-folder .ui-cache

            - name: Install background dependencies
              if: ${{ (steps.cache-background.outputs.cache-hit != 'true') || (github.event.inputs.cache == 'true') }}
              run: cd packages/background/ && yarn install --prefer-offline --frozen-lockfile --cache-folder .background-cache
              env:
                  GITHUB_TOKEN: ${{ secrets.PAT }}

            - name: Install provider dependencies
              if: ${{ (steps.cache-provider.outputs.cache-hit != 'true') || (github.event.inputs.cache == 'true') }}
              run: cd packages/provider/ && yarn install --prefer-offline --frozen-lockfile --cache-folder .provider-cache

            - name: Build tailwind
              run: cd packages/ui/ && yarn build:tailwind

            - name: Test
              run: yarn test

            - name: Slack notification
              uses: 8398a7/action-slack@v3
              with:
                  status: ${{ job.status }}
                  fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
              if: always()
