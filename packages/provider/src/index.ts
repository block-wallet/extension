import BlankProvider from './provider/BlankProvider';
import {
    Origin,
    WindowTransportResponseMessage,
} from '@block-wallet/background/utils/types/communication';
import log, { LogLevelDesc } from 'loglevel';
import shimWeb3 from './utils/shimWeb3';
import { InjectedWindow } from './types';

// Setting the default log level:
log.setLevel((process.env.LOG_LEVEL as LogLevelDesc) || 'warn');

const blankProvider = new BlankProvider();

// Listens to events generated by the background script
window.addEventListener(
    'message',
    ({ data, source }: MessageEvent<WindowTransportResponseMessage>): void => {
        // Only allow messages from our window, by the loader
        if (source !== window || data.origin !== Origin.BACKGROUND) {
            return;
        }

        if (data.id) {
            blankProvider.handleResponse(data);
        } else {
            log.error('Missing response id.');
        }
    }
);

const provider = new Proxy(blankProvider, {
    deleteProperty: () => true,
});

shimWeb3(provider);

(window as Window & InjectedWindow).ethereum = provider;

window.dispatchEvent(new Event('ethereum#initialized'));
